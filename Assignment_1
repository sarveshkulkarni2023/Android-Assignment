// Define the Car class
    open class Car(val make: String, val model: String, val year: Int, var mileage: Double)
    {

        // Function to print out the car details
        open fun details()
        {
            println("\n Make: $make, Model: $model, Year: $year, Mileage: $mileage")
        }

        // Function to increment the mileage
        fun drive(miles: Double)
        {
            mileage += miles
        }
    }

    // Define the ElectricCar subclass
    class ElectricCar(make: String, model: String, year: Int, mileage: Double, val batteryCapacity: Double)
        : Car(make, model, year, mileage)
        {

        // Override the details function to include batteryCapacity
        override fun details() 
        {
            super.details()
            println("Battery Capacity: $batteryCapacity kWh")
        }
    }

    // Main function to demonstrate the use of both Car and ElectricCar classes
    fun main()
    {
        // Create an instance of Car
        val myCar = Car("Toyota", "Corolla", 2010, 120000.0)
        myCar.details()  // Print details of the car
        myCar.drive(100.0)  // Drive the car for 100 miles
        println("After driving 100 miles:")
        myCar.details()  // Print details again to see the updated mileage

        // Create an instance of ElectricCar
        val myElectricCar = ElectricCar("Tesla", "Model S", 2022, 5000.0, 100.0)
        myElectricCar.details()  // Print details of the electric car
        myElectricCar.drive(50.0)  // Drive the electric car for 50 miles
        println("After driving 50 miles:")
        myElectricCar.details()  // Print details again to see the updated mileage and battery capacity
    }
